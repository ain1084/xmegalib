/*
 * MultiByteString.cpp
 *
 * Created: 2012/05/07 22:53:37
 *  Author: Seiji Ainoguchi
 */

#include "MultiByteString.h"
#include "BasicString.h"

BasicString MultiByteString::ZenkakuToHankaku(const char *pStr)
{
	char buf[strlen(pStr) + 1];
	char* pw = buf;
	
	uint8_t c;
	while ((c = *pStr++) != '\0')
	{
		if (IsLeadByte(c))
		{
			uint8_t n = *pStr;
			if (!Is2ndByte(n))
			{
				continue;
			}
			pStr++;
			uint16_t zenkaku = ZenkakuToHankaku(((uint16_t)c << 8) | n);
			if ((zenkaku & 0xff00) != 0)
			{
				*pw++ = zenkaku >> 8;
			}
			*pw++ = zenkaku;
		}
		else
		{
			*pw++ = c;
		}
	}
	*pw = '\0';
	return buf;
}

uint16_t MultiByteString::ZenkakuToHankaku(uint16_t wchar)
{
	if (wchar >= 0x8140 && wchar <= 0x829a)
	{
		static const uint16_t convertTable[] =
		{
			0x8140, 0x8149, 0x818d, 0x8194, 0x8190, 0x8193, 0x8195, 0x818c,  0x8169, 0x816a, 0x8196, 0x817b, 0x8143, 0x815c, 0x8144, 0x815e,
			0x824f, 0x8250, 0x8251, 0x8252, 0x8253, 0x8254, 0x8255, 0x8256,  0x8257, 0x8258, 0x8146, 0x8147, 0x8171, 0x8181, 0x8172, 0x8148,
			0x8197, 0x8260, 0x8261, 0x8262, 0x8263, 0x8264, 0x8265, 0x8266,  0x8267, 0x8268, 0x8269, 0x826a, 0x826b, 0x826c, 0x826d, 0x826e,
			0x826f, 0x8270, 0x8271, 0x8272, 0x8273, 0x8274, 0x8275, 0x8276,  0x8277, 0x8278, 0x8279, 0x816d, 0x818f, 0x816e, 0x814f, 0x8151,
			0x814d, 0x8281, 0x8282, 0x8283, 0x8284, 0x8285, 0x8286, 0x8287,  0x8288, 0x8289, 0x828a, 0x828b, 0x828c, 0x828d, 0x828e, 0x828f,
			0x8290, 0x8291, 0x8292, 0x8293, 0x8294, 0x8295, 0x8296, 0x8297,  0x8298, 0x8299, 0x829a, 0x816f, 0x8162, 0x8170, 0x8160, 0x0000
		};
		
		for (uint8_t i = 0;; ++i)
		{
			if (convertTable[i] == 0x0000)
			{
				break;
			}
			if (convertTable[i] == wchar)
			{
				return i + 0x20;
			}
		}
	}			
	return wchar;
}
